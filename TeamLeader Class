class TeamLeader : public ProductionWorker {
private:
    double monthlyBonus;
    int requiredTrainingHours;
    int attendedTrainingHours;

public:
    // Default constructor
    TeamLeader() : ProductionWorker(), monthlyBonus(0.0), requiredTrainingHours(0), attendedTrainingHours(0) {}

    // Parameterized constructor
    TeamLeader(string n, string num, string date, int s, double rate, double bonus, int reqHours, int attHours)
        : ProductionWorker(n, num, date, s, rate),
          monthlyBonus(bonus), requiredTrainingHours(reqHours), attendedTrainingHours(attHours) {}

    // Accessors
    double getMonthlyBonus() const { return monthlyBonus; }
    int getRequiredTrainingHours() const { return requiredTrainingHours; }
    int getAttendedTrainingHours() const { return attendedTrainingHours; }

    // Mutators
    void setMonthlyBonus(double bonus) { monthlyBonus = bonus; }
    void setRequiredTrainingHours(int hours) { requiredTrainingHours = hours; }
    void setAttendedTrainingHours(int hours) { attendedTrainingHours = hours; }

    // Print function
    void printTeamLeader() const {
        printProductionWorker();
        cout << "Monthly Bonus: $" << monthlyBonus << "\n"
             << "Required Training Hours: " << requiredTrainingHours << "\n"
             << "Attended Training Hours: " << attendedTrainingHours << endl;
    }
};
